source ~/lib/modules/general.sh
source ~/lib/modules/net-mn-utils.sh

printHelp() {
  echo "Uses NetworkManager to create a logical bonded interface across the physical interfaces specified."
  echo
  echo "Usage: $(basename $0) INTERFACE..."
  echo
  echo "Parameters:"
  echo -e "\tINTERFACE\tOne of more physical network interfaces that you would like to be able to treat as just one logical interface."
  echo -e "\t\t\tAn INTERFACE value of nothing or '-help' will cause this help text to be displayed."
  echo
  echo "Example:"
  echo -e "\t$(basename $0) eth0 eth1"
  echo
  echo "Creates a virtual bonded interface called 'bond0' that now controls eth0 and eth1 according to the default bonding algorithm."
  echo
  echo "Note: The physical interfaces will lose their IP addresses and the bond adapter will now be the only one of the set with an IP address."
  echo "If you are using DHCP to configure the bonded interfaces with static addresses, then you'll have to update the DHCP server to assign one of them to the virtual bond interface which has its own unique autogenerated MAC address."
}

# Note: The =~ construct doesn't recognize carrot (^) as start-of-line. 
if [ $# == 0 -o "$(echo "$1" | grep '^-')" ]; then
  printHelp
  exit 1
fi

declare -a interfaces
interfaces=($*)

[ ! hasSudo ] && echo "You have insufficient permissions to run this command" && exit 1

# Get the offset number for the new bond adapter
bondNum=0
while [ "$(nmcli conn | grep bond$bondNum)" ]; do
  ((bondNum+=1))
done
bondId="bond${bondNum}"
bondName="${bondId}-conn1"

# Create the virtual bonded adapter
sudo nmcli conn add type bond con-name "$bondName" ifname "$bondId"

# (Optional) Set the load-balancing algorithm
sudo nmcli conn modify "$bondName" bond.options "mode=balance-alb"

# Connect the specified physical interfaces to the bond set.
ifNum=0
for iface in ${interfaces[*]}; do
  ((ifNum+=1))
  ifId="${bondId}-if${ifNum}"
  sudo nmcli conn add type ethernet slave-type bond con-name "$ifId" ifname "$iface" master "$bondId" 
done

# Set the IP address for the bond
read -p "Will this new bond get it's address via DHCP (Y/n)? " -n 1 hasDHCP; echo
# Do nothing bc DHCP is the default setting for the bonded interface 

# Ask user for static addressing details
if [ "${hasDHCP,,}" == "n" ]; then
  while [ -z "$ip" ]; do
    read -p "IP Address: " ip
  done

  read -p "CIDR Netmask (default=24): " netmask
  [ -z "$netmask" ] && netmask=24  # 255.255.255.0
  
  while [ -z "$gw" ]; do
    read -p "Gateway IP: " gw
  done

  sudo nmcli connection modify "$bondName" ipv4.method manual ipv4.addresses $ip/$netmask ipv4.gateway $gw ipv4.dns $gw,1.1.1.1,8.8.8.8,8.8.4.4
fi

# If bond is still down, let's do everything we can to get it up!
if [ "$(sudo ip addr | grep "$bondId" | grep -i "down")" ]; then
  getItUp "$bondId"
fi

read -p "Would you prefer a (d)etailed or (s)ummary report of the changes [d/S]? " reportType
[ "${reportType,,}" == 'd' ] && sudo nmcli dev show || sudo nmcli dev
